{"version":3,"sources":["helperFunctions.js","AlbumDetails.jsx","AlbumList.jsx","Navbar.jsx","InvalidError.jsx","ApiError.jsx","Homepage.jsx","Api.js","Loading.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["formatDate","dateString","split","year","month","day","AlbumDetails","albumData","className","href","collectionViewUrl","collectionName","artistName","alt","src","artworkUrl100","primaryGenreName","releaseDate","copyright","AlbumList","artistAlbumData","results","map","album","collectionId","Navbar","artistLink","setCurrArtist","useState","inputValue","setInputValue","id","name","value","onChange","e","target","type","placeholder","onClick","preventDefault","document","getElementById","InvalidError","ApiError","Homepage","artistNameForTitle","artistAplleMusicLink","error","artistViewUrl","Api","ITUNES_API","axios","get","resp","data","Loading","icon","faCircleNotch","size","App","isLoading","setIsLoading","set","setError","currArtist","setArtistAlbumData","artist","a","getAlbums","albumsData","undefined","length","useEffect","getAlbumData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8e2eba5c.chunk.js","sourcesContent":["/**\n * date comes in format \"2012-01-01T08:00:00Z\" (year-month-day-Time)\n * split on \"T or , or space\"\n * convert to month-day-year and return\n */\n\nfunction formatDate(dateString) {\n  const regex = /(T|,| )+/;\n  const formattedDateArr = dateString.split(regex);\n  const [year, month, day] = formattedDateArr[0].split('-');\n  return `${month}-${day}-${year}`;\n}\n\nexport default formatDate;\n","import React from 'react';\nimport './AlbumDetails.css';\nimport formatDate from './helperFunctions';\n\nfunction AlbumDetails({ albumData }) {\n  return (\n    <div className=\"album-section\">\n      <div className=\"card mb-3\">\n        <a href={albumData.collectionViewUrl} className=\"title-link\">\n          <h3 className=\"card-header\">{albumData.collectionName}</h3>\n        </a>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{albumData.artistName}</h5>\n        </div>\n        <div className=\"card-body\">\n          <img alt={`album art for ${albumData.collectionName}`} src={albumData.artworkUrl100} />\n        </div>\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">{`Genre: ${albumData.primaryGenreName}`}</li>\n          <li className=\"list-group-item\">\n            {`Release Date: ${formatDate(albumData.releaseDate)}`}\n          </li>\n        </ul>\n        <div className=\"card-footer text-muted\">\n          {albumData.copyright}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AlbumDetails;\n","import React from 'react';\nimport AlbumDetails from './AlbumDetails';\nimport './AlbumList.css';\n\nfunction AlbumList({ artistAlbumData }) {\n  // for each album in the results render AlbumDetails component and pass relevant data in props\n  return (\n    <div className=\"container \">\n      {artistAlbumData.results.map((album) => (\n        <AlbumDetails key={album.collectionId} albumData={album} />\n      ))}\n    </div>\n  );\n}\n\nexport default AlbumList;\n","import React, { useState } from 'react';\nimport './Navbar.css';\n\nfunction Navbar({ artistName, artistLink, setCurrArtist }) {\n  const [inputValue, setInputValue] = useState('');\n\n  // update input state as user writes in form\n  function handleChange(e) {\n    const { value } = e.target;\n    setInputValue(value);\n  }\n\n  // set the currArtist to what was submitted in the input then clear the input\n  function handleSubmit(e) {\n    e.preventDefault();\n    const { value } = document.getElementById('artist-input');\n    setCurrArtist(value);\n    e.target.value = '';\n  }\n\n  return (\n    <div className=\"main-navbar-div\">\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n        <div className=\"container-fluid\">\n          <h4>\n            <a className=\"nav-link active\" href={artistLink}>{artistName}</a>\n          </h4>\n          <div className=\"d-flex\">\n            <input className=\"me-sm-2 nav-form\" id=\"artist-input\" name=\"name\" value={inputValue} onChange={handleChange} type=\"text\" placeholder=\"Artist Name\" />\n            <button type=\"button\" onClick={handleSubmit} className=\"btn btn-success nav-form\">Change Artist</button>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport './Error.css';\n\nfunction InvalidError() {\n  return (\n    <h4 className=\"error\">Error: Invalid input check spelling and try again!</h4>\n  );\n}\n\nexport default InvalidError;\n","import React from 'react';\nimport './Error.css';\n\nfunction ApiError() {\n  return (\n    <div className=\"error\">\n      <h4>Api request failed!</h4>\n    </div>\n  );\n}\n\nexport default ApiError;\n","import React from 'react';\nimport AlbumList from './AlbumList';\nimport Navbar from './Navbar';\nimport InvalidError from './InvalidError';\nimport ApiError from './ApiError';\nimport './Homepage.css';\n\nfunction Homepage({ artistAlbumData, setCurrArtist, error }) {\n  // get the artist name and link to apple music page from first album in the response\n  let artistNameForTitle;\n  let artistAplleMusicLink;\n  if (artistAlbumData) {\n    // if request was successful get artist name and link from first result\n    artistNameForTitle = artistAlbumData.results[0].artistName;\n    artistAplleMusicLink = artistAlbumData.results[0].artistViewUrl;\n  } else {\n    // Give vals default values if artistAlbumData is undefined\n    artistNameForTitle = 'Artist Name';\n    artistAplleMusicLink = '';\n  }\n\n  function errorCheck() {\n    if (error) {\n      return (error.type === 'api'\n        ? <ApiError />\n        : <InvalidError />);\n    }\n    return <AlbumList artistAlbumData={artistAlbumData} />;\n  }\n\n  return (\n    <div>\n      <Navbar\n        artistName={artistNameForTitle}\n        artistLink={artistAplleMusicLink}\n        setCurrArtist={setCurrArtist}\n      />\n      <h1 className=\"main-title\">Favorite Artist Albums</h1>\n      {/* if error, render correct error component else render AlbumList */}\n      {errorCheck()}\n    </div>\n  );\n}\n\nexport default Homepage;\n","import axios from 'axios';\n\nclass Api {\n  static async getAlbums(artistName) {\n    const ITUNES_API = `https://itunes.apple.com/search?term=${artistName}&media=music&entity=album`;\n    const resp = await axios.get(ITUNES_API);\n    return resp.data;\n  }\n}\n\nexport default Api;\n","import React from 'react';\nimport './Loading.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons';\n\nfunction Loading() {\n  return (\n    <div className=\"loader\">\n      <FontAwesomeIcon icon={faCircleNotch} className=\"fa-spin\" size=\"5x\" />\n      <i className=\"fas fa-circle-notch fa-spin\" />\n      <h1>loading</h1>\n    </div>\n  );\n}\n\nexport default Loading;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Homepage from './Homepage';\nimport Api from './Api';\nimport Loading from './Loading';\n\nfunction App() {\n  // defualt to be used as my 'favorite artist' don't know if I'd say favorite but I enjoy them\n  const DEFAULT_ARTIST = 'Imagine Dragons';\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState({ set: false, type: '' });\n  const [currArtist, setCurrArtist] = useState(DEFAULT_ARTIST);\n  const [artistAlbumData, setArtistAlbumData] = useState();\n\n  // call getAlbums from the Api, set state for albumsData and isLoading\n  async function getAlbumData(artist) {\n    let albumsData;\n    setIsLoading(true);\n    try {\n      albumsData = await Api.getAlbums(artist);\n    } catch (e) {\n      setError({ set: true, type: 'api' });\n    }\n    // if the results arr is empty the Api either couldn't find albums for the artist\n    // or it was a bad request so show an error, otherwise change the state accordingly\n    if (albumsData !== undefined) {\n      if (albumsData.results.length !== 0) {\n        setArtistAlbumData(albumsData);\n        setError(false);\n      } else {\n        setError({ set: true, type: 'data' });\n      }\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    // try catch w/ error handling\n    getAlbumData(currArtist);\n  }, [currArtist]);\n\n  // display loading screen until Api call is fulfilled or rejected\n  if (isLoading) {\n    return (\n      <Loading />\n    );\n  }\n\n  return (\n    <Homepage artistAlbumData={artistAlbumData} setCurrArtist={setCurrArtist} error={error} />\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}